"""initial migration

Revision ID: 4f54a04d1c47
Revises: 
Create Date: 2024-09-12 11:39:23.462601

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4f54a04d1c47'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_tables_id', table_name='tables')
    op.drop_index('ix_tables_table_number', table_name='tables')
    op.drop_table('tables')
    op.drop_table('menu')
    op.drop_index('ix_reservations_id', table_name='reservations')
    op.drop_table('reservations')
    op.drop_index('ix_orders_id', table_name='orders')
    op.drop_table('orders')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_menus_id', table_name='menus')
    op.drop_table('menus')
    # ### end Alembic commands ###
    # Avval foreign key cheklovini olib tashlang
    op.drop_constraint('reservations_table_id_fkey', 'reservations', type_='foreignkey')

    # Jadvalni o'chirish
    op.drop_table('tables')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('menus',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('menus_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='menus_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_menus_id', 'menus', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('menu_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('table_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], name='orders_menu_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='orders_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='orders_pkey')
    )
    op.create_index('ix_orders_id', 'orders', ['id'], unique=False)
    op.create_table('reservations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('table_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], name='reservations_table_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='reservations_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='reservations_pkey')
    )
    op.create_index('ix_reservations_id', 'reservations', ['id'], unique=False)
    op.create_table('menu',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='menu_pkey')
    )
    op.create_table('tables',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('table_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('AVAILABLE', 'RESERVED', name='tablestatus'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='tables_pkey')
    )
    op.create_index('ix_tables_table_number', 'tables', ['table_number'], unique=True)
    op.create_index('ix_tables_id', 'tables', ['id'], unique=False)
    # ### end Alembic commands ###
    op.create_table(
        'tables',
        sa.Column('id', sa.Integer, primary_key=True),
        # qolgan ustunlarni qo'shing
    )

    # Foreign key ni qayta tiklash
    op.create_foreign_key('reservations_table_id_fkey', 'reservations', 'tables', ['table_id'], ['id'])